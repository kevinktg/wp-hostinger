name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Generate static sites
        run: |
          echo "Building sites..."
          # Build at least the default example to ensure output exists
          if [ -d .agent-content ]; then
            # Build all templates that have corresponding content JSON
            for content in .agent-content/*-content.json; do
              name=$(basename "$content" -content.json)
              echo "Building $name from $content"
              node scripts/build-site.js --template="$name" --content="$content" || true
            done
          else
            echo ".agent-content not found; skipping content-driven builds"
          fi
          # Ensure generated-site exists
          mkdir -p generated-site

      - name: Generate landing index
        run: |
          set -e
          out="generated-site/index.html"
          echo "Generating landing page at $out"
          cat > "$out" <<'HTML'
          <!doctype html>
          <html lang="en">
          <head>
            <meta charset="utf-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <title>WP Hostinger — Demos</title>
            <link rel="preconnect" href="https://fonts.googleapis.com">
            <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
            <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
            <style>
              body{font-family:Inter,system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif;margin:0;background:#0b0f14;color:#e6edf3}
              header{padding:32px 20px;text-align:center}
              h1{margin:0;font-size:28px}
              p.lead{margin:8px 0 0;color:#9fb1c1}
              .grid{display:grid;gap:16px;padding:24px;grid-template-columns:repeat(auto-fill,minmax(260px,1fr))}
              .card{background:#121923;border:1px solid #1f2a37;border-radius:12px;padding:16px;transition:transform .1s ease, border-color .1s ease}
              .card:hover{transform:translateY(-2px);border-color:#2b3a4a}
              .name{font-weight:600;margin:0 0 8px}
              .actions{display:flex;gap:10px}
              .btn{display:inline-block;background:#1f6feb;color:#fff;text-decoration:none;padding:8px 12px;border-radius:8px;font-weight:600}
              .btn.secondary{background:#2b3a4a}
              footer{padding:24px;text-align:center;color:#93a4b5}
            </style>
          </head>
          <body>
            <header>
              <h1>WP Hostinger — Live Demos</h1>
              <p class="lead">Browse all available templates. Each opens in a subpath.</p>
            </header>
            <div class="grid" id="cards"></div>
            <footer>Deployed via GitHub Pages</footer>
            <script>
              async function load() {
                const res = await fetch('./');
                const text = await res.text();
                const parser = new DOMParser();
                const doc = parser.parseFromString(text, 'text/html');
                const links = Array.from(doc.querySelectorAll('a'))
                  .map(a => a.getAttribute('href'))
                  .filter(href => href && href.endsWith('/') && href !== '../' && href !== './');
                const unique = Array.from(new Set(links));
                const container = document.getElementById('cards');
                unique.forEach(href => {
                  const name = href.replace(/\/$/, '');
                  const card = document.createElement('div');
                  card.className = 'card';
                  card.innerHTML = `
                    <h3 class="name">${name}</h3>
                    <div class="actions">
                      <a class="btn" href="${href}" target="_blank" rel="noopener">View Demo</a>
                    </div>
                  `;
                  container.appendChild(card);
                });
              }
              load();
            </script>
          </body>
          </html>
          HTML

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: generated-site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4


